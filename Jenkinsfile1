pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDS = credentials('DOCKERHUB_TOKEN')
        DOCKER_IMAGE = "ptn3001/"
        IMAGE_TAG = ''
    }

    stages {
        stage('Check Branch or Tag') {
            steps {
                script {
                    def tag = sh(script: "git describe --tags --exact-match HEAD 2>/dev/null || echo ''", returnStdout: true).trim()
                    def branch = env.BRANCH_NAME

                    if (tag) {
                        echo "Git tag found: ${tag}"
                        if (tag ==~ /^v\\d+\\.\\d+\\.\\d+$/) {
                            echo "This is a tag release: ${tag}"
                            env.IMAGE_TAG = tag
                        } else {
                            echo "Tag ${tag} is not a release tag. Aborting."
                            currentBuild.result = 'ABORTED'
                            return
                        }
                    } else if (branch ==~ /^rc_v\\d+\\.\\d+\\.\\d+$/) {
                        echo "This is a release candidate branch: ${branch}"
                        env.IMAGE_TAG = branch.replaceFirst(/^rc_/, '')
                    } else {
                        echo "Branch ${branch} is not a release tag or RC branch. Skipping pipeline."
                        currentBuild.result = 'ABORTED'
                        return
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Deployed to staging with tag ${env.IMAGE_TAG}"
        }
        failure {
            echo "Pipeline failed."
        }
        aborted {
            echo "Pipeline aborted due to invalid branch/tag."
        }
    }
}
